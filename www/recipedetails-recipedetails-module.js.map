{"version":3,"sources":["webpack:///./src/app/recipedetails/recipedetails.module.ts","webpack:///./src/app/recipedetails/recipedetails.page.html","webpack:///./src/app/recipedetails/recipedetails.page.scss","webpack:///./src/app/recipedetails/recipedetails.page.ts"],"names":[],"mappings":"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","file":"recipedetails-recipedetails-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { RecipeDetailsPage } from './recipedetails.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: RecipeDetailsPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [RecipeDetailsPage]\r\n})\r\nexport class RecipeDetailsPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n          <ion-back-button></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Details</ion-title>\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button fill='outline' (click)=\\\"bookmarkClick()\\\" [ngClass]=\\\"{'activated' : isBookmarked }\\\"><ion-icon name=\\\"bookmark\\\"></ion-icon></ion-button>\\r\\n          </ion-buttons>\\r\\n      </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-card>\\r\\n  <ion-card-header>\\r\\n      <ion-card-title>{{recipeTitle}}</ion-card-title>\\r\\n      {{macroString}}\\r\\n  </ion-card-header>\\r\\n</ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Serving Size (People)</ion-card-subtitle>\\r\\n      <ion-card-title>{{servingSize}}</ion-card-title>\\r\\n    </ion-card-header>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Prep Time</ion-card-subtitle>\\r\\n      <ion-card-title>{{prepTime}}</ion-card-title>\\r\\n    </ion-card-header>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Ingredients</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item *ngFor=\\\"let ingredient of ingredients;\\\">\\r\\n          <ion-label text-wrap>{{ingredient.name}}</ion-label>\\r\\n          <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"ingredient.isChecked\\\"></ion-checkbox>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Steps</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item *ngFor=\\\"let step of steps;\\\">\\r\\n          {{step.str}}\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlZGV0YWlscy9DOlxcVXNlcnNcXGFkZm95XFxpb25pY19BcHBcXGJyb25jby1udXRyaXRpb24yL3NyY1xcYXBwXFxyZWNpcGVkZXRhaWxzXFxyZWNpcGVkZXRhaWxzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlZGV0YWlscy9yZWNpcGVkZXRhaWxzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW9uLWltZyB7XHJcbiAgbWF4LWhlaWdodDogMzV2aDtcclxuICAvL292ZXJmbG93OiBoaWRkZW47XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Recipe } from '../Recipe';\r\nimport { Macro } from '../Recipe';\r\nimport { NavController } from '@ionic/angular';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'recipedetails.page.html',\r\n  styleUrls: ['recipedetails.page.scss'],\r\n})\r\n\r\nexport class RecipeDetailsPage{\r\n  private recipeToDisplay: Recipe;\r\n  public isBookmarked: boolean;\r\n  public recipeTitle: string;\r\n  public servingSize: string;\r\n  public prepTime: string;\r\n  public macros: Macro[];\r\n  public macroString: string;\r\n  public ingredients: Array <{ name: string }> = [];\r\n  public steps: Array<{ str: string }> = [];\r\n  private inc: any = 0;\r\n  private recipeToBook:Array<string>=[];\r\n\r\n  constructor(private navCtrl: NavController,private toastController:ToastController,private afAuth:AuthService) {\r\n    this.recipeToDisplay = Recipe.getRecipeToDisplay;\r\n    this.recipeTitle = this.recipeToDisplay.getRecipeTitle;\r\n    this.servingSize = this.recipeToDisplay.getNumServings;\r\n    this.prepTime = this.recipeToDisplay.getPrepTime;\r\n    this.macros = this.recipeToDisplay.getMacros;\r\n    \r\n    // populate lists of ingredients and steps\r\n    this.setupIngredientsList();\r\n    this.setupStepsList();\r\n    this.macroString = this.getMacroString();\r\n    this.isBookmarked = false;\r\n  }\r\n\r\n  bookmarkClick(){\r\n    this.presentToast();\r\n    this.bookmarkRecipe();\r\n  }\r\n\r\n  async presentToast() {\r\n    const toast = await this.toastController.create({\r\n      message: 'Recipe Bookmarked',\r\n      duration: 1500\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  bookmarkRecipe(){\r\n   /*if(localStorage.getItem(\"increment\")!= null){\r\n    this.inc=JSON.parse(localStorage.getItem(\"increment\"));\r\n    this.recipeToBook[this.inc] = this.recipeToDisplay.getRecipeTitle;\r\n    localStorage.setItem(this.afAuth.user.email, JSON.stringify(this.recipeToBook));\r\n    this.inc++;\r\n    localStorage.setItem(\"increment\",JSON.stringify(this.inc));\r\n    //skeleton to be filled in by Austin/Tony\r\n    }else{\r\n        this.recipeToBook[this.inc]=this.recipeToDisplay.getRecipeTitle;\r\n        localStorage.setItem(this.afAuth.user.email,JSON.stringify(this.recipeToBook));\r\n        this.inc++;\r\n        localStorage.setItem(\"increment\",JSON.stringify(this.inc));\r\n    }\r\n    console.log(this.inc); */\r\n  }\r\n\r\n  isRecipeBookmarked(): boolean {\r\n    // check and see if the recipe is saved to local storage.\r\n    return true;\r\n  }\r\n\r\n  setupIngredientsList() {\r\n    for(let i = 0; i < this.recipeToDisplay.getIngredients.length; i++) {\r\n      this.ingredients.push({\r\n        name: this.recipeToDisplay.getIngredients[i]\r\n      });\r\n    }\r\n  }\r\n\r\n  setupStepsList() {\r\n    for(let i = 0; i < this.recipeToDisplay.getSteps.length; i++) {\r\n      this.steps.push({\r\n        str: this.recipeToDisplay.getSteps[i]\r\n      });\r\n    }\r\n  }\r\n\r\n  stringifyMacro(macro: Macro): string{\r\n    if (macro === Macro.Carbohydrates) {\r\n      return 'Carbohydrates';\r\n    } else if (macro === Macro.Fat) {\r\n      return 'Fats';\r\n    } else {\r\n      return 'Protein';\r\n    }\r\n  }\r\n\r\n  getMacroString(): string {\r\n    let macroString: string = '';\r\n    for (let i = 0; i < this.macros.length; i++) {\r\n      macroString += this.stringifyMacro(this.macros[i]);\r\n      if(i < this.macros.length - 1) {\r\n        macroString += ', '\r\n      }\r\n    }\r\n    return macroString;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // add back when alpha.4 is out\r\n  // navigate(item) {\r\n  //   this.router.navigate(['/list', JSON.stringify(item)]);\r\n  // }\r\n\r\n}\r\n"],"sourceRoot":""}