{"version":3,"sources":["webpack:///./src/app/Recipe.ts","webpack:///./src/app/auth/auth.service.ts"],"names":[],"mappings":"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","file":"default~account-account-module~foodlist-foodlist-module~login-login-module~recipedetails-recipedetai~2e537e95.js","sourcesContent":["export enum Macro { Carbohydrates, Protein, Fat}\r\n\r\nconst CARBS_STR = 'C';\r\nconst PROTEIN_STR = 'P';\r\nconst FAT_STR = 'F';\r\n\r\nexport class Recipe {\r\n\r\n  constructor(private title: string, private numServings: string, private macros: Macro[],\r\n              private prepTime: string, private ingredients: string[], private steps: string[]) { }\r\n\r\n  get getRecipeTitle() {\r\n    return this.title;\r\n  }\r\n\r\n  get getNumServings() {\r\n    return this.numServings;\r\n  }\r\n\r\n  get getMacros() {\r\n    return this.macros;\r\n  }\r\n\r\n  get getPrepTime() {\r\n    return this.prepTime;\r\n  }\r\n\r\n  get getIngredients() {\r\n    return this.ingredients;\r\n  }\r\n\r\n  get getSteps() {\r\n    return this.steps;\r\n  }\r\n\r\n  static parseNumServings(servings: string): string {\r\n    return servings;\r\n  }\r\n\r\n  // parse out the 3 basic nutrition macros from\r\n  // the firebase data store.\r\n  static parseMacros(macros: string): Macro[] {\r\n    const returnArray: Macro[] = [];\r\n    if (macros.indexOf('C') !== -1 ) {\r\n      returnArray.push(Macro.Carbohydrates);\r\n    }\r\n\r\n    if (macros.indexOf('P') !== -1) {\r\n      returnArray.push(Macro.Protein);\r\n    }\r\n\r\n    if (macros.indexOf('F') !== -1) {\r\n      returnArray.push(Macro.Fat);\r\n    }\r\n\r\n    return returnArray;\r\n  }\r\n\r\n  static parseSteps(stepsStr: string): string[] {\r\n     let steps = stepsStr.split(\"\\n\");\r\n     let regex = /\\d. /;\r\n\r\n     for(let i = 0; i < steps.length; i++) {\r\n       steps[i] = steps[i].replace(regex, \"\");\r\n     }\r\n\r\n     return steps;\r\n  }\r\n\r\n  static parseIngredients(ingredientsStr: string): string[] {\r\n    return ingredientsStr.split(\"\\n\");\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { User } from 'firebase';\r\nimport * as firebase from 'firebase';\r\nimport { Recipe } from '../Recipe';\r\n\r\nconst RECIPE_NAME_INDEX = 0;\r\nconst NUM_SERVINGS_INDEX = 1;\r\nconst MACROS_INDEX = 2;\r\nconst PREP_TIME_INDEX = 3;\r\nconst INGREDIENTS_INDEX = 4;\r\nconst STEPS_INDEX = 5;\r\n\r\nexport const snapshotToRecipeArray = snapshot => {\r\n  const returnArr = [];\r\n  snapshot.forEach(childSnapshot => {\r\n      const item = childSnapshot.val();\r\n      // package everything up into an easily usable Recipe object.\r\n      const title = item[RECIPE_NAME_INDEX];\r\n      const numServings = Recipe.parseNumServings(item[NUM_SERVINGS_INDEX]);\r\n      const macros = Recipe.parseMacros(item[MACROS_INDEX]);\r\n      const prepTime = item[PREP_TIME_INDEX];\r\n      const ingredients = Recipe.parseIngredients(item[INGREDIENTS_INDEX]);\r\n      const steps = Recipe.parseSteps(item[STEPS_INDEX]);\r\n\r\n      const newRecipe = new Recipe(title, numServings, macros,\r\n                                  prepTime, ingredients,\r\n                                  steps);\r\n      returnArr.push(newRecipe);\r\n  });\r\n\r\n  return returnArr;\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  private user: User;\r\n  private recipes = [];\r\n    private ref = firebase.database().ref('recipeSheet/');\r\n    private username: string;\r\n\r\n  constructor(public afAuth: AngularFireAuth, public router: Router, public navCtrl: NavController) {\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.user = user;\r\n          localStorage.setItem('user', JSON.stringify(this.user));\r\n          this.username = localStorage.getItem(this.user.email);\r\n        this.navCtrl.navigateRoot(['./home']);\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n      }\r\n    });\r\n\r\n    // grab recipe data from Firebase, and pack it into an array.\r\n    this.ref.on('value', resp => {\r\n      this.recipes = [];\r\n      this.recipes = snapshotToRecipeArray(resp);\r\n    });\r\n  }\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n      await firebase.auth().signInWithEmailAndPassword(email, password);\r\n      this.navCtrl.navigateRoot(['./home']);\r\n    } catch (error) {\r\n      const errorMsg = error.message;\r\n      alert('Error signing in: ' + errorMsg);\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    await firebase.auth().signOut();\r\n    localStorage.removeItem('user');\r\n    this.navCtrl.navigateRoot(['./login']);\r\n\r\n  }\r\n\r\n  // ask firebase if we have a user logged in currently.\r\n  get isLoggedIn(): boolean {\r\n    if (firebase.auth().currentUser) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n\t}\r\n\t\r\n\tasync signup(firstname: string,lastname:string,email: string, password: string){\r\n\t\ttry{\r\n      await this.afAuth.auth.createUserWithEmailAndPassword(email, password)\r\n      this.confirm_Signup(email);\r\n      this.accountFirstLastName(firstname, lastname);\r\n      \r\n      this.router.navigate(['./login']);\r\n\r\n\t\t}catch(e){\r\n      alert(\"Error!\"+e.message);\r\n\t\t}\r\n  }\r\n\r\n\r\n  accountEmail(): string  {\r\n    return  this.user.email ;\r\n  }\r\n\r\n  accountUserName(): string {\r\n    return this.username;\r\n  }\r\n\r\n  \r\n\r\n  resetPassword(new_password: string, conf_password: string) {\r\n    if (this.afAuth.auth.confirmPasswordReset(new_password, conf_password)) {\r\n      this.user.updatePassword(new_password);\r\n    } else {\r\n      alert('Error!: Passwords must match!');\r\n    }\r\n  }\r\n\r\n  confirm_Signup(email: string) {\r\n    this.user.sendEmailVerification();\r\n  }\r\n\r\n    accountFirstLastName(firstname: string, lastname: string): void {\r\n        this.username = firstname + lastname;\r\n    }\r\n\r\n\r\n  get getRecipes(): Array<Recipe> {\r\n    return this.recipes;\r\n  }\r\n}\r\n"],"sourceRoot":""}